{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAiCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAzCAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEJ,MAAMC,EAAQF,EAAIG,cAAcd,MAAMe,MAChCC,EAAOL,EAAIG,cAAcE,KAAKD,MAC9BE,EAAkBN,EAAIG,cAAcI,OAAOH,MAEjD,GAAIF,EAAQ,GAAKG,EAAO,GAAKC,GAAmB,EAE9C,YADAE,EAAAvB,GAASwB,OAAOC,QAAQ,mCAI1B,IAAIC,EAAeT,EAEnB,IAAK,IAAIU,EAAW,EAAGA,GAAYN,EAAiBM,GAAY,EAC9DzB,EAAcyB,EAAUD,GACrBE,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAAvB,GAASwB,OAAOK,QAAQ,uBAAqB1B,QAAiBC,MAAU,IAEzE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBmB,EAAAvB,GAASwB,OAAOO,QAAQ,sBAAoB5B,QAAeC,MAAU,IAGzEsB,GAAgBN,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const delay = evt.currentTarget.delay.value;\n  const step = evt.currentTarget.step.value;\n  const amountOfPromise = evt.currentTarget.amount.value;\n\n  if (delay < 0 || step < 0 || amountOfPromise <= 0) {\n    Notiflix.Notify.warning('Input values should be positive');\n    return;\n  }\n\n  let currentDelay = delay;\n\n  for (let position = 1; position <= amountOfPromise; position += 1) {\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    currentDelay += step;\n  };\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","currentTarget","value","step","amountOfPromise","amount","$parcel$interopDefault","Notify","warning","currentDelay","position1","then","success","catch","failure"],"version":3,"file":"03-promises.9ecb61e0.js.map"}