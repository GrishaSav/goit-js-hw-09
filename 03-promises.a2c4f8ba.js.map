{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA6BA,SAASC,EAAcC,EAAUC,GACf,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IArCMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAuEC,EAAAF,EAAIG,cAAnEC,EAA+DF,EAA/Db,MAAkBgB,EAA6CH,EAA7CI,KAAiBC,EAA4BL,EAA5BM,OAE3C,GAAIJ,EAAY,GAAKC,EAAY,GAAKE,GAAmB,EAEvD,YADAE,EAAAxB,GAASyB,OAAOC,QAAQ,mCAI1B,IAAK,IAAIC,EAAW,EAAGA,GAAYL,EAAiBK,GAAY,EAC9DzB,EAAcyB,EAAUR,GACrBS,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjBoB,EAAAxB,GAASyB,OAAOK,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAEvE4B,OAAM,SAAAH,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClBoB,EAAAxB,GAASyB,OAAOQ,QAAQ,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAGvEe,GAAaC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const { delay: mainDelay, step: delayStep, amount: amountOfPromise } = evt.currentTarget;\n\n  if (mainDelay < 0 || delayStep < 0 || amountOfPromise <= 0) {\n    Notiflix.Notify.warning('Input values should be positive');\n    return;\n  }\n\n  for (let position = 1; position <= amountOfPromise; position += 1) {\n    createPromise(position, mainDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    mainDelay += delayStep;\n  };\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","_currentTarget","currentTarget","mainDelay","delayStep","step","amountOfPromise","amount","$parcel$interopDefault","Notify","warning","position1","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.a2c4f8ba.js.map"}